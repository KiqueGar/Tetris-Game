### TODO's:

[x] Create_Canvas
	[x] Draw_canvas
[x] Create_Pieces
	[x] Show pieces
	[x] Coordinate_moves
	[x] Rotate pieces
	[x] detect colission
		[x] Don't change zone if destiny is filled	
[x] Show next piece
	[x] Use next piece as falling block and generate new next block
[x] Add colision/end of X to zone
	[x] Delete falling object
	[x] Create new falling object
[x] Gameover condition
	[ ] DonÂ´t close at Game Over
[x] Remove completed row
	[x] Do not remove if not same color
	[x] Remove penalties
	[x] Fall pieces down
[x] Show text
	[x] Next piece
	[x] Show Score
	[ ] Game Over
[x] Outliers generation
[x] Change speed acording to score
[x] Add conda env to documentation
[x] Generate .EXE
[x] No Lag on Movement
[x] When click, turn penalty to correct color
	[x] Map click position
	[x] Check if in penalty and delete
[ ] CPU plays on same boards
	[ ] Aims to maximize player score
		[ ] Zone color policy
		[ ] Current space policy
			[ ] Max height
			[ ] Max Outliers
	[ ] No colission
	[ ] Destination?


Examples:
https://inventwithpython.com/pygame/chapter7.html
http://code.activestate.com/recipes/580680-tetris/

Rotate array
https://stackoverflow.com/questions/8421337/rotating-a-two-dimensional-array-in-python